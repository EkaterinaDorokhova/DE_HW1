# -*- coding: utf-8 -*-
"""bot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H_mwqiBrqYAFvO56eTre-ALTJBkcgY-A

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

1. –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ (telegram, requests, csv, os, datetime, json)

2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:

- TELEGRAM_TOKEN ‚Äî —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ BotFather

- IAM_TOKEN ‚Äî IAM-—Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ API YandexGPT

- FOLDER_ID ‚Äî ID –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ Yandex Cloud

- LOG_FILE_PATH ‚Äî –ø—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É —Å –ª–æ–≥–∞–º–∏
"""

from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from datetime import datetime
import requests
import csv
import os
import json

from yandex_cloud_ml_sdk import YCloudML

TELEGRAM_TOKEN = "7151965357:AAFpyYFg6mBcteEuXhp8gQLwbRuSS6pxEG0"
IAM_TOKEN ="t1.9euelZqYkZnIk8uVnIyQz5GSjZeMj-3rnpWampuXzJ2SlpyOi52PjI-Knpfl9PdtQm8_-e8uPWO63fT3LXFsP_nvLj1jus3n9euelZqeyp6UjI7Jx8-Qi4zNjsuMnO_8zef1656VmpOezpTMlsvPzs-Qj5mYzZqY7_3F656Vmp7KnpSMjsnHz5CLjM2Oy4yc.ewJ6w2FwMFdWrB-_c6ZtCZwRZOC_KSFKm6BFh0EwivbrgPe2dsjE4NrV08zVpoy5PVTDzmkRJlERV3IKxrhVCw"
FOLDER_ID = "b1gv54oj5gk7o0lvehoh"
LOG_FILE_PATH = "data/log.csv"

"""# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π

1. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ñ–∞–π–ª data/log.csv

2. –ó–∞—Ç–µ–º –≤ –ª–æ–≥ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è:

- user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

- –≤—Ä–µ–º—è (timestamp)

- —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (start, user_message, gpt_reply)

- —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
"""

# –õ–æ–≥-—Ñ–∞–π–ª
if not os.path.exists(LOG_FILE_PATH):
    with open(LOG_FILE_PATH, mode="w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["user_id", "timestamp", "action", "text"])

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log_action(user_id: int, action: str, text: str = ""):
    timestamp = datetime.now().isoformat()
    with open(LOG_FILE_PATH, mode="a", newline="") as file:
        writer = csv.writer(file)
        writer.writerow([user_id, timestamp, action, text])
    print(f"LOG: {user_id} ‚Äî {action} ‚Äî {text[:40]}")

"""# –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ YandexGPT

1. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è API-–∞–¥—Ä–µ—Å https://llm.api.cloud.yandex.net/foundationModels/v1/completion
2. –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è JSON-–∑–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:

- –º–æ–¥–µ–ª—å: yandexgpt-lite

- temperature: 0.6

- maxTokens: 200

- –∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

3. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ñ—Ä–∞–∑–∞ "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ YandexGPT üòî".
"""

# –û—Ç–≤–µ—Ç YandexGPT
def ask_yandexgpt(user_text: str) -> str:
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
        "Authorization": f"Bearer {IAM_TOKEN}",
        "Content-Type": "application/json"
    }
    body = {
        "modelUri": f"gpt://{FOLDER_ID}/yandexgpt-lite",
        "completionOptions": {
            "stream": False,
            "temperature": 0.6,
            "maxTokens": 200
        },
        "messages": [
            {"role": "user", "text": user_text}
        ]
    }
    try:
        response = requests.post(url, headers=headers, json=body)
        response.raise_for_status()
        return response.json()["result"]["alternatives"][0]["message"]["text"]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ GPT: {e}")
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ YandexGPT üòî"

"""# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ (–æ—Ç–≤–µ—Ç –Ω–∞ /start)

1. –õ–æ–≥–∏—Ä—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ

2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
"""

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è /start
def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    log_action(user_id, "start")
    update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, –∑–Ω–∞—á–∏—Ç, —É–∂–µ –≤—Å—ë –Ω–µ–ø–ª–æ—Ö–æ üòé –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–ø—Ä–æ—Å–∏—Ç—å —É –≥–ø—Ç ü§ì ")

"""# –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ–Ω–æ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è (user_message)
2. –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è ask_yandexgpt(...):

- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ YandexGPT Lite —á–µ—Ä–µ–∑ HTTP API

- –ø–æ–ª—É—á–∞–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç

- –æ—Ç–≤–µ—Ç –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ gpt_reply

- –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


"""

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_text = update.message.text
    log_action(user_id, "user_message", user_text)

    reply = ask_yandexgpt(user_text)

    log_action(user_id, "gpt_reply", reply)
    update.message.reply_text(reply)

"""# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

–§—É–Ω–∫—Ü–∏—è main:

- –∑–∞–ø—É—Å–∫–∞–µ—Ç Updater –¥–ª—è Telegram

- –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Ç–µ–∫—Å—Ç–æ–≤

- –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç –≤ —Ä–µ–∂–∏–º–µ polling.
"""

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    updater.start_polling()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.idle()

if __name__ == '__main__':
    main()